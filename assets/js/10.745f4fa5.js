(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{354:function(t,s,a){t.exports=a.p+"assets/img/dom-tree.81b33acc.png"},402:function(t,s,a){"use strict";a.r(s);var n=a(43),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"dom-树"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dom-树"}},[t._v("#")]),t._v(" DOM 树")]),t._v(" "),n("h2",{attrs:{id:"dom-树概览"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dom-树概览"}},[t._v("#")]),t._v(" DOM 树概览")]),t._v(" "),n("p",[n("code",[t._v("HTML")]),t._v(" 文本会被解析成 DOM 树，它是一个树状结构，"),n("code",[t._v("<html>")]),t._v(" 是其根节点，"),n("code",[t._v("<body>")]),t._v("、"),n("code",[t._v("<head>")]),t._v(" 则是其子项；\n"),n("code",[t._v("DOM")]),t._v(" 树的每一个节点都是一个 "),n("code",[t._v("对象")]),t._v("，当谈标签内的文本也是一个 "),n("code",[t._v("对象")]),t._v("；\n所有的这些 "),n("code",[t._v("对象")]),t._v(" 我们都可以通过 "),n("code",[t._v("JavaScript")]),t._v(" 来访问，我们可以使用其相关的方法来修改页面；")]),t._v(" "),n("h2",{attrs:{id:"dom-树结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dom-树结构"}},[t._v("#")]),t._v(" DOM 树结构")]),t._v(" "),n("p",[t._v("什么是 "),n("code",[t._v("DOM")]),t._v(" 树？以下边的 HTML 为栗子：")]),t._v(" "),n("div",{staticClass:"language-html line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token doctype"}},[t._v("<!DOCTYPE HTML>")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("About elk"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("title")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    The truth about elk.\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br")])]),n("p",[t._v("它所生成的 "),n("code",[t._v("DOM")]),t._v(" 树如下图所示：\n"),n("img",{attrs:{src:a(354),alt:"DOM tree"}})]),t._v(" "),n("p",[t._v("这里要注意文本节点中的特殊字符：")]),t._v(" "),n("ul",[n("li",[t._v("换行符："),n("code",[t._v("↵")]),t._v("（在 JavaScript 中为 \\n）")]),t._v(" "),n("li",[t._v("空格："),n("code",[t._v("␣")])])]),t._v(" "),n("p",[t._v("通常 "),n("code",[t._v("空格")]),t._v(" 和 "),n("code",[t._v("换行符")]),t._v(" 都是有效的字符，它们形成文本节点并成为 "),n("code",[t._v("DOM")]),t._v(" 的一部分；"),n("br"),t._v("\n但有两个 "),n("code",[t._v("顶级排除项")]),t._v(" 是例外的：")]),t._v(" "),n("ol",[n("li",[t._v("由于历史原因，"),n("code",[t._v("<head>")]),t._v(" 之前的 "),n("code",[t._v("空格")]),t._v(" 和 "),n("code",[t._v("换行符")]),t._v(" 均被忽略；")]),t._v(" "),n("li",[t._v("如果在 "),n("code",[t._v("</body>")]),t._v(" 之后放置一些东西，那么它会被自动移动到 "),n("code",[t._v("body")]),t._v(" 内，并处于 "),n("code",[t._v("body")]),t._v(" 的最下方，这是因为 "),n("code",[t._v("HTML")]),t._v(" 规范要求所有内容必须位于 "),n("code",[t._v("body")]),t._v(" 内；")])])])}),[],!1,null,null,null);s.default=e.exports}}]);